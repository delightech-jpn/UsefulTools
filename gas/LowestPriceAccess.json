{"files":[{"id":"a3f8c03a-b306-4565-9b21-e02825c5d18f","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Asia/Tokyo\",\n  \"dependencies\": {},\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  }\n}"},{"id":"de597ff4-6fef-44ce-a2ab-778caf179a75","name":"コード","type":"server_js","source":"// URL\n// https://script.google.com/macros/s/AKfycbwp4nxb2yLYodbrmjbSEsW81UZa_gRTMnUJsNjjurSxsNB3uDq1OmMnZZf5uUwWKzLS/exec\n\n// SpreadSheet\n// https://docs.google.com/spreadsheets/d/1TdgB-g0EeyunGCPqN4bndeq6Pa9bSrOanGGVfrWOJ5g/edit\nconst SPREADSHEET_ID \u003d \"1TdgB-g0EeyunGCPqN4bndeq6Pa9bSrOanGGVfrWOJ5g\";\nconst SHEET_NAME \u003d \u0027lower_list\u0027;\n\nfunction doGet(e) {\n  const mode \u003d e.parameter.mode || \"\";\n\n  if (mode \u003d\u003d\u003d \"list\") {\n    return getItemList();\n  } else if (mode \u003d\u003d\u003d \"detail\") {\n    return getItemDetail(e.parameter.item);\n  }\n\n\n  return ContentService\n    .createTextOutput(JSON.stringify({ error: \"Invalid mode\" }))\n    .setMimeType(ContentService.MimeType.JSON);\n}\n\nfunction doPost(e) {\n  try {\n    const data \u003d JSON.parse(e.postData.contents);\n    const mode \u003d data.mode || \"\";\n\n    if (mode \u003d\u003d\u003d \"search\") {\n      return searchAndUpdateItem(data);\n    } else if (mode \u003d\u003d\u003d \"new\") {\n      return addNewItem(data);\n    }\n\n    return ContentService\n      .createTextOutput(JSON.stringify({ error: \"Invalid mode\" }))\n      .setMimeType(ContentService.MimeType.JSON);\n\n  } catch (err) {\n    return ContentService\n      .createTextOutput(JSON.stringify({ error: err.message }))\n      .setMimeType(ContentService.MimeType.JSON);\n  }\n}\n\nfunction getItemList() {\n  const sheet \u003d SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName(SHEET_NAME);\n  const values \u003d sheet.getRange(2, 1, sheet.getLastRow() - 1, 1).getValues();\n  const items \u003d values.flat().filter(v \u003d\u003e v); // 空を除外\n\n  return ContentService\n    .createTextOutput(JSON.stringify(items))\n    .setMimeType(ContentService.MimeType.JSON);\n}\n\nfunction getItemDetail(itemName) {\n  console.info(itemName);\n  if (!itemName) {\n    return ContentService\n      .createTextOutput(JSON.stringify({ error: \"item parameter required\" }))\n      .setMimeType(ContentService.MimeType.JSON);\n  }\n  const sheet \u003d SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName(SHEET_NAME);\n  const data \u003d sheet.getRange(2, 1, sheet.getLastRow() - 1, 5).getValues();\n  console.info(data);\n\n  for (let i \u003d 0; i \u003c data.length; i++) {\n    const [item, unitPrice, price, quantity, updatedAt] \u003d data[i];\n    if (item \u003d\u003d\u003d itemName) {\n      return ContentService\n        .createTextOutput(JSON.stringify({\n          item,\n          unit_price:unitPrice,\n          price,\n          quantity,\n          updated_at: updatedAt\n        }))\n        .setMimeType(ContentService.MimeType.JSON);\n    }\n  }\n\n  return ContentService\n    .createTextOutput(JSON.stringify({ error: \"Item not found:\" + str(data) }))\n    .setMimeType(ContentService.MimeType.JSON);\n}\n\n// 既存品目検索・更新\nfunction searchAndUpdateItem(data) {\n  const sheet \u003d SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName(SHEET_NAME);\n  const { item, price, quantity } \u003d data;\n  const unitPrice \u003d price / quantity;\n  const lastRow \u003d sheet.getLastRow();\n\n  for (let i \u003d 2; i \u003c\u003d lastRow; i++) {\n    const existingItem \u003d sheet.getRange(i, 1).getValue();\n    if (existingItem \u003d\u003d\u003d item) {\n      const existingUnitPrice \u003d sheet.getRange(i, 2).getValue();\n      if (unitPrice \u003c existingUnitPrice) {\n        sheet.getRange(i, 2).setValue(unitPrice);\n        sheet.getRange(i, 3).setValue(price);\n        sheet.getRange(i, 4).setValue(quantity);\n        sheet.getRange(i, 5).setValue(new Date());\n        return ContentService\n          .createTextOutput(JSON.stringify({ status: \"updated\" }))\n          .setMimeType(ContentService.MimeType.JSON);\n      } else {\n        return ContentService\n          .createTextOutput(JSON.stringify({ status: \"no_update\" }))\n          .setMimeType(ContentService.MimeType.JSON);\n      }\n    }\n  }\n\n  return ContentService\n    .createTextOutput(JSON.stringify({ status: \"not_found\" }))\n    .setMimeType(ContentService.MimeType.JSON);\n}\n\n// 新規品目追加\nfunction addNewItem(data) {\n  const sheet \u003d SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName(SHEET_NAME);\n  const { item, price, quantity } \u003d data;\n  const unitPrice \u003d price / quantity;\n  sheet.appendRow([item, unitPrice, price, quantity, new Date()]);\n  return ContentService\n    .createTextOutput(JSON.stringify({ status: \"added\" }))\n    .setMimeType(ContentService.MimeType.JSON);\n}\n"}]}