{"files":[{"id":"1b3119fd-fba6-4eca-9bad-bb27f1444ea9","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Asia/Tokyo\",\n  \"dependencies\": {},\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  }\n}"},{"id":"9bd8f43b-99ce-4c41-b637-bd70947134ac","name":"コード","type":"server_js","source":"\n// URL\n// https://script.google.com/macros/s/AKfycbyJb93GqckOEK-6Iw99XI7qpXjIgx_SclN1fGV0__nI4JqQR_uLMR0hIPCNjKOzRY-v/exec\n\n// SpreadSheet\n// https://docs.google.com/spreadsheets/d/1orTOeDidliZqBhqT4uVc9FEtZtuO0xdf956Nt0MAKM0/edit?gid\u003d0#gid\u003d0\nconst SPREADSHEET_ID \u003d \"1orTOeDidliZqBhqT4uVc9FEtZtuO0xdf956Nt0MAKM0\";\nconst SHEET_NAME \u003d \u0027Sheet1\u0027;\n\nfunction doPost(e) {\n  try {\n    const body \u003d JSON.parse(e.postData.contents);\n    const keywords \u003d body.keywords || {};\n\n    const time \u003d (keywords.time || \u0027\u0027).toString();\n\n    let ingredients \u003d [];\n    if (Array.isArray(keywords.ingredients)) {\n      ingredients \u003d keywords.ingredients.map(i \u003d\u003e i.trim());\n    } else if (typeof keywords.ingredients \u003d\u003d\u003d \u0027string\u0027) {\n      ingredients \u003d keywords.ingredients\n        .replace(/、/g, \",\")\n        .split(\",\")\n        .map(s \u003d\u003e s.trim())\n        .filter(s \u003d\u003e s.length \u003e 0);\n    }\n\n    const category \u003d (keywords.category || \u0027\u0027).toString();\n\n    const ss \u003d SpreadsheetApp.openById(SPREADSHEET_ID);\n    const sheet \u003d ss.getSheetByName(SHEET_NAME);\n    const values \u003d sheet.getDataRange().getValues(); // 2D array\n\n    // ヘッダがあると仮定して 1 行目をスキップ\n    const results \u003d [];\n    for (let i \u003d 1; i \u003c values.length; i++) {\n      const row \u003d values[i];\n      const row_time \u003d row[1] ? row[1].toString().trim() : \u0027\u0027;\n      const row_ingredients_raw \u003d row[2] ? row[2].toString().trim() : \u0027\u0027;\n      const row_category \u003d row[3] ? row[3].toString().trim() : \u0027\u0027;\n\n      const row_ingredients \u003d row_ingredients_raw\n        .replace(/、/g, \",\")\n        .split(\",\")\n        .map(s \u003d\u003e s.trim())\n        .filter(s \u003d\u003e s.length \u003e 0);\n      \n      const categoryMatch \u003d !category || row_category \u003d\u003d\u003d category;\n      const ingredientsMatch \u003d\n        ingredients.length \u003d\u003d\u003d row_ingredients.length \u0026\u0026\n        ingredients.every(ing \u003d\u003e row_ingredients.includes(ing));\n\n      if (categoryMatch \u0026\u0026 ingredientsMatch) {\n        results.push({\n          row: i + 1,\n          time: row_time,\n          ingredients: row_ingredients_raw,\n          category: row_category,\n          menu_json: row[5] || \u0027\u0027\n        });\n      }\n    }\n\n    if (results.length \u003e 0) {\n      return ContentService\n        .createTextOutput(JSON.stringify({found:true, items: results}))\n        .setMimeType(ContentService.MimeType.JSON);\n    }\n\n    // 見つからない場合は検索キーワードを保存する\n    const now \u003d new Date();\n    sheet.appendRow([now, time, ingredients.join(\",\"), category, false, \u0027\u0027]);\n\n    return ContentService\n      .createTextOutput(JSON.stringify({found:false, saved:true}))\n      .setMimeType(ContentService.MimeType.JSON);\n\n  } catch (err) {\n    return ContentService\n      .createTextOutput(JSON.stringify({error: err.toString()}))\n      .setMimeType(ContentService.MimeType.JSON);\n  }\n}\n\nfunction doGet() {\n  return ContentService.createTextOutput(\"Hello from doGet\");\n}\n\n"}]}